/***************************************************************************
 *   Copyright (C) 2015 by root   				   						   *
 *   ysgen0217@163.com   							   					   *
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 *   This program is distributed in the hope that it will be useful,       *
 *   but WITHOUT ANY WARRANTY; without even the implied warranty of        *
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         *
 *   GNU General Public License for more details.                          *
 *                                                                         *
 *   You should have received a copy of the GNU General Public License     *
 *   along with this program; if not, write to the                         *
 *   Free Software Foundation, Inc.,                                       *
 *   59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.             *
 ***************************************************************************/
#ifndef __CORELIB_DATABASE_COMMON_SQLSTRING_H__
#define __CORELIB_DATABASE_COMMON_SQLSTRING_H__

#include <string>

#include "../../../common/basetype.h"

namespace corelib {
namespace database {

class SqlString
{
	private:

		SqlString(const SqlString&);
		SqlString& operator= (const SqlString&);

	public:

		SqlString();
		~SqlString();

	public:

		void append(int32 i);
		
		void append(uint32 i);
		
		void append(long i);
		
		void append(unsigned long i);
		
		void append(int64 i);
		
		void append(uint64 i);
		
		void append(const std::string &str);

		template<typename T>
		SqlString& operator << (const T &t)
		{
			append(t);
			return *this;
		};

		inline const std::string &preview() const
		{
			return sql_;
		}

	private:

		std::string sql_;
};

}
}

#endif /* end of file */